"use strict";(self.webpackChunknpwd_esx_banking=self.webpackChunknpwd_esx_banking||[]).push([[250],{4121:(e,n,t)=>{t.d(n,{y:()=>l,s:()=>o});var a=t(2950),r=t.n(a),i=t(2613),l=function(){return r().createElement(i.Z,null)},o=function(){return r().createElement(i.Z,{fontSize:"small"})}},9250:(e,n,t)=>{t.r(n),t.d(n,{path:()=>o,default:()=>c});var a=t(4023),r=t(4121),i=t(4274),l={en:"Banking"},o="/banking";const c=function(e){var n;return{id:"BANKING",path:o,nameLocale:l[null!==(n=null==e?void 0:e.language)&&void 0!==n?n:"en"],color:"#fff",backgroundColor:i.W1,icon:r.y,notificationIcon:r.s,app:a.Z}}},4023:(e,n,t)=>{t.d(n,{Z:()=>g});var a,r,i=t(2950),l=t.n(i),o=t(5475),c=t(3839),s=t.n(c),d=t(6501),u=t(4810),f=t(8039),m=t(1551),p=(t(4722),t(1654)),h=function(){return h=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var r in n=arguments[t])Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);return e},h.apply(this,arguments)},x=s()(d.Z)(k||(a=["\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  max-height: 100%;\n"],r=["\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  max-height: 100%;\n"],Object.defineProperty?Object.defineProperty(a,"raw",{value:r}):a.raw=r,k=a)),b=function(e){return l().createElement(u.Z,{injectFirst:!0},l().createElement(f.Z,{mode:e.theme.palette.mode},l().createElement(x,{square:!0,elevation:0},l().createElement(m.Z,null,"Template app"),l().createElement(p.Z,null))))};const g=function(e){return l().createElement(o.NuiProvider,null,l().createElement(b,h({},e)))};var k},4274:(e,n,t)=>{t.d(n,{W1:()=>i,np:()=>o});var a=t(3486),r=t(6115),i=a.Z[500],l=r.Z.white,o=(r.Z.black,{light:{palette:{mode:"light",primary:{main:i,dark:a.Z[700],light:a.Z[300],contrastText:l},secondary:{main:"#d32f2f",light:"#eb4242",dark:"#941212",contrastText:l},success:{main:"#2196f3",contrastText:l}}},dark:{palette:{mode:"dark",primary:{main:i,dark:a.Z[700],light:a.Z[300],contrastText:l},secondary:{main:"#d32f2f",light:"#eb4242",dark:"#941212",contrastText:l},success:{main:"#2196f3",contrastText:l}}}})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,